Библиотека SuffixTree
Автор: Попов Сергей, 395 группа.

Представляет из себя заголовочный файл suffixtree.h, содержащий класс SuffixTree с публичным конструктором и публичным методом DFS . Конструктор принимает строку, по которой строится суффиксное дерево, а DFS предоставляет пользователю возможность обхода дерева.

Метод DFS шаблонный, принимает указатель на объект шаблонного типа. Этот тип - класс модели DFSVisitor, причем в нем должны быть реализованы следующие методы:
1) setSourse(const std::string&), DFS вызывает его с аргументом строки, по которой построено дерево, инициирует соответствующее поле Visitor'а.
2) beforeVertexProc(int vert), DFS вызывает его, как только заходит в вершину vert.
3) edgeProc(int from, int to, int substrStart, int substrEnd, bool &go), DFS вызывает его перед переходом по ребру из вершины from в вершину to, на котором написана подстрока строки суфф. дерева с substrStart по substrEnd индексы. DFS передает в этот метод булеву переменную, и осуществляет переход по ребру лишь в случае, когда метод присвоил переменной go истинное значение.
4) afterVertexProc(int vert), DFS вызывает его перед тем, как выходит из вершины vert.

Таким образом, пользователь может создать свой "посетитель" DFS'а, имплементировав необходимые методы таким образом, чтобы решить поставленную перед ним задачу.


Также библиотека содержит заголовочный файл findoccurences.h. В нем реализован такой "посетитель", при помощи которого решается задача нахождения всех вхождений строки pattern в строку, на которой построено дерево. А именно, функция findAllOccurences, принимающая суффиксное дерево и строку pattern, возвращает вектор индексов этих вхождений.

Работа над тестами еще продолжается. 